name: Build
on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]
jobs:
  rust:
    # Do not run this job for pull requests where both branches are from the same repo.
    # Other jobs will be skipped too, as they depend on this one.
    # This prevents duplicate CI runs for our own pull requests, whilst preserving the ability to
    # run the CI for each branch push to a fork, and for each pull request originating from a fork.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.id != github.event.pull_request.base.repo.id
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Rust cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            datafusion-jni/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.*') }}

      - name: Stable with rustfmt and clippy
        run: rustup toolchain install stable --profile minimal --no-self-update --component rustfmt clippy

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Cargo build
        run: ./gradlew cargoReleaseBuild

      - name: Upload built artifacts
        uses: actions/upload-artifact@v3
        if: matrix.os == 'macos-latest'
        with:
          name: datafusion-jni-${{ matrix.os }}
          if-no-files-found: error
          path: "datafusion-jni/target/release/libdatafusion_jni.dylib"
          retention-days: 3

      - name: Upload built artifacts
        uses: actions/upload-artifact@v3
        if: matrix.os == 'ubuntu-latest'
        with:
          name: datafusion-jni-${{ matrix.os }}
          if-no-files-found: error
          path: "datafusion-jni/target/release/libdatafusion_jni.so"
          retention-days: 3

      - name: Upload built artifacts
        uses: actions/upload-artifact@v3
        if: matrix.os == 'windows-latest'
        with:
          name: datafusion-jni-${{ matrix.os }}
          if-no-files-found: error
          # note no "lib"
          path: "datafusion-jni\\target\\release\\datafusion_jni.dll"
          retention-days: 3

  java:
    needs:
      - rust
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "temurin"

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Download ubuntu artifacts
        uses: actions/download-artifact@v3
        with:
          name: datafusion-jni-ubuntu-latest
          path: datafusion-java/build/jni_libs/linux-x86_64

      - name: Download windows artifacts
        uses: actions/download-artifact@v3
        with:
          name: datafusion-jni-windows-latest
          path: datafusion-java/build/jni_libs/windows-x86_64

      - name: Download macos artifacts
        uses: actions/download-artifact@v3
        with:
          name: datafusion-jni-macos-latest
          path: datafusion-java/build/jni_libs/osx-x86_64

      - name: List downloaded artifacts
        run: tree datafusion-java/build/jni_libs

      - name: Build and test
        run: ./gradlew -PJNI_PATH=${{ github.workspace }}/datafusion-java/build/jni_libs/linux-x86_64 build

      - name: Publish to Maven Local
        run: ./gradlew publishToMavenLocal

      - name: Upload built artifacts
        uses: actions/upload-artifact@v3
        with:
          name: datafusion-java
          if-no-files-found: error
          path: ~/.m2/repository/uk/co/gresearch/datafusion/datafusion-java
          retention-days: 3
